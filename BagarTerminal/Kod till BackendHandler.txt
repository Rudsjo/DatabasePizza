Till "public interface IDatabase"

public Task BakerChoosingOrderToCook(Employee employee, Order order, string storedProcedure = "BakerChoosingOrderToCook");
public Task BakerCancellingCooking(Employee employee, Order order, string storedProcedure = "BakerCancellingCooking");



Till "public class MSSQL : IDatabase"



        public async Task BakerChoosingOrderToCook(Employee employee, Order order, string storedProcedure = "BakerChoosingOrderToCook")
        {
            using (IDbConnection connection = new SqlConnection(ConnectionString))
            {
                await connection.QueryAsync<Order>(storedProcedure, new { EmployeeID = employee.UserID, OrderID = order.OrderID }, commandType: CommandType.StoredProcedure);
            }
        }
        public async Task BakerCancellingCooking(Employee employee, Order order, string storedProcedure = "BakerCancellingCooking")
        {
            using (IDbConnection connection = new SqlConnection(ConnectionString))
            {
                await connection.QueryAsync<Order>(storedProcedure, new { EmployeeID = employee.UserID, OrderID = order.OrderID }, commandType: CommandType.StoredProcedure);
            }

Till "public class PostgreSQL : IDatabase" bara f√∂r att.



            public Task BakerChoosingOrderToCook(Employee employee, Order order, string storedProcedure = "BakerChoosingOrderToCook")
            {
                throw new NotImplementedException();
            }

            public Task BakerCancellingCooking(Employee employee, Order order, string storedProcedure = "BakerCancellingCooking")
            {
                throw new NotImplementedException();
            }